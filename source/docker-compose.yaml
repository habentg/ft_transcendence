version: '3.8'

services:
  postgres:
    container_name: postgresql
    image: postgres:15-alpine
    restart: unless-stopped
    volumes:
      - our_db:/var/lib/postgresql/data
    networks:
      - trans_net
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    container_name: app
    image: app_image
    build:
      context: ./transcendence/.
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - trans_net
    env_file:
      - .env
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      REDIS_URL: redis://redis:6379/0
    volumes:
      - ./transcendence:/app
      - ./transcendence/media:/app/media
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 10s

  nginx:
    container_name: nginx_server
    image: nginx_image
    build:
      context: ./nginx_server/.
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      app:
        condition: service_healthy
    networks:
      - trans_net
    ports:
      - "80:80"
      # - dont forget to add secure=true to all the cookies in the app
      # - "443:443"  # If you want to use HTTPS
    volumes:
      - ./nginx_server/conf/nginx.conf:/etc/nginx/nginx.conf:ro

  redis:
    container_name: redis
    image: redis:6-alpine
    restart: unless-stopped
    networks:
      - trans_net
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5


volumes:
  our_db:
    driver: local
  redis_data:
    driver: local

networks:
  trans_net:
    name: trans_net
    driver: bridge
  
# Cyber security module - 1 (I will get back to it if I find it necessary, for now it sounds like an overkill)
  # vault:
  #   image: hashicorp/vault
  #   container_name: hashicorp_vault
  #   ports:
  #     - "8200:8200"
  #   volumes:
  #     - ./vault/config:/vault/config
  #     - ./vault/data:/vault/data
  #     - ./vault/logs:/vault/logs
  #   cap_add:
  #     - IPC_LOCK
  #   environment:
  #     - VAULT_ADDR=http://0.0.0.0:8200
  #   command: server
  #   networks:
  #     - trans_net

  # modsecurity:
  #   container_name: modsecurity
  #   image: owasp/modsecurity
  #   restart: unless-stopped
  #   depends_on:
  #     nginx:
  #       condition: service_healthy
  #   networks:
  #     - trans_net
  #   volumes:
  #     - ./modsecurity/rules:/etc/modsecurity/rules
  #   ports:
  #     - "8080:8080"
  #   env_file:
  #     - .env