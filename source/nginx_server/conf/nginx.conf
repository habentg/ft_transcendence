events {
    worker_connections 1024;
}

http {

    server {
        listen 80;
        server_name localhost;

        # MIME types - basically what type of files are we serving
        # nginx will add the correct headers to the response (then browser knows what do with it) like this:
        # Content-Type: text/css for css files (.css) etc.  
        types {
            text/css css;
            text/html html htm;
            text/javascript js;
            image/jpeg jpeg jpg;
            image/png png;
            image/gif gif; # we have used gif yet but lets seeee
            application/json json;
            image/svg+xml svg;
        }

        # # Serve static files directly
        location /static/ {
            alias /media_static/static/;  # Directly use the mounted static directory
            expires 30d; # Cache static files for 30 day -- should be longer (30 is good as well) for production
            add_header Cache-Control "public, max-age=";
        }

        # Serve media files directly
        location /media/ {
            alias /media_static/media/;  # Directly use the mounted media directory
            expires 30d;
            add_header Cache-Control "public, max-age=2592000"; 
        }

        # not loging health check coz it's too much and it will be hard to read the logs
        location /health/ {
            access_log off;
            # proxy_pass http://app:8000;
            return 200 'OK';
        }

        # WebSocket routing
        location /ws/ {
            proxy_pass http://app:8000;
            proxy_http_version 1.1;     # Required for WebSocket (for HTTP/1.1)
            proxy_set_header Upgrade $http_upgrade;  # WebSocket upgrade header
            proxy_set_header Connection "upgrade";   # Ensure connection stays open
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # DOC: https://nginx.org/en/docs/http/ngx_http_proxy_module.html
        location / {
            proxy_pass http://app:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}